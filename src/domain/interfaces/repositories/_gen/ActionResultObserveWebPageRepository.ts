// This file is generated by scripts/generateInterfaceRepositories.ts
import { ActionResult } from '../../../entities/ActionResult'
import { ActionResultObserveWebPage } from '../../../entities/ActionResultObserveWebPage'
import { PromisedResult, UnknownRuntimeError, AlreadyExistsError, NotFoundError } from '../../../../_shared/error'

export interface ActionResultObserveWebPageRepository {
  issueId: () => PromisedResult<string, UnknownRuntimeError>
  getAll: () => PromisedResult<ActionResultObserveWebPage[], UnknownRuntimeError>
  getRelevant: (text: string, limit: number) => PromisedResult<ActionResultObserveWebPage[], UnknownRuntimeError>
  create: (entity: ActionResultObserveWebPage) => PromisedResult<ActionResultObserveWebPage, UnknownRuntimeError | AlreadyExistsError>
  update: (entity: ActionResultObserveWebPage) => PromisedResult<ActionResultObserveWebPage, UnknownRuntimeError | NotFoundError>
  delete: (id: string) => PromisedResult<void, UnknownRuntimeError | NotFoundError>
  getByActionResultId: (ActionResultId: ActionResult['id']) => PromisedResult<ActionResultObserveWebPage | null, UnknownRuntimeError>
}
